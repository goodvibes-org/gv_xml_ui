services:
  nginx-proxy:
    image: ghcr.io/goodvibes-org/gv_xml_ui/nginx-proxy:latest
    container_name: nginx-proxy


    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    depends_on:
      - app
      - filebrowser

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      replicas: 0
  app:
    image: ghcr.io/goodvibes-org/gv_xml_ui/app:latest
    restart: "always"
    expose:
      - "9000"
    volumes:
      - storage:/app/data:rw
    env_file:
      - ./gcs.env
    environment:
      - RUST_BACKTRACE=full
      - VIRTUAL_HOST=app-local.localhost
      - VIRTUAL_PORT=9000

  calculator:
    image: ghcr.io/goodvibes-org/gv_xml_ui/calculator:latest
    volumes:
      - storage:/data/share:rw
    ports:
      - "3000:3000"

    env_file:
      - ./gcs.env
      - ../gv_xml/docker.env
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser
    ports:
      - "8888:8888"
    user: 1000:1000 
    volumes:
       - storage:/data
#      - storage:/srv # files will be stored here  
        #- "./filebrowser.db:/database.db" # users info/settings will be stored here
        #- "filebrowser.json:/filebrowser.json" # config file
    environment:
      - FB_BASEURL=/filebrowser
      - FB_PORT=8888
      - VIRTUAL_HOST=xmls.localhost
      - VIRTUAL_PORT=8888
    restart: always

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    restart: always
    ports:
      - 8085:9000
    environment:
      - VIRTUAL_HOST=db.localhost
    deploy:
      replicas: 1
volumes:
  storage:
  certs:
  html:
  vhostd:
